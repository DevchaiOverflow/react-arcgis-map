{"version":3,"sources":["Components/Views/Header/AppBarView.js","Components/Containers/Header/AppBar.js","Maps/MapManagerView.js","Maps/MapManager.js","Components/Views/Website/Result/BottomPanel.js","Components/Views/Website/Result/BottomPanel2.js","Components/Views/Website/WebLayoutView.js","Components/Containers/Website/WebLayout.js","Components/Views/LayoutView.js","Components/Containers/Layout.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","root","height","width","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","sectionDesktop","sectionMobile","AppBarView","props","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","aria-controls","aria-haspopup","className","Toolbar","edge","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","AppBar","margin","top","MapManagerView","mapRef","Grid","ref","MapManager","useRef","useEffect","createMap","EsriLoader","loadModules","css","then","ArcGISMap","MapView","map","basemap","container","current","center","zoom","bottom","createData","name","calories","fat","carbs","protein","rows","BottomPanel","split","minSize","maxSize","defaultSize","primary","style","zIndex","Paper","TableContainer","component","Table","table","TableHead","TableRow","TableCell","align","TableBody","row","key","scope","WebLayoutView","WebLayout","LayoutView","Layout","muiTheme","createMuiTheme","typography","fontFamily","values","xs","sm","md","lg","xl","App","ThemeProvider","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.338474b3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { fade, makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport Badge from '@material-ui/core/Badge'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle'\r\nimport MailIcon from '@material-ui/icons/Mail'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications'\r\nimport MoreIcon from '@material-ui/icons/MoreVert'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    root: {\r\n        height: '60px',\r\n        width: '100%'\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing(7),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 7),\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: 200,\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n}))\r\n\r\nconst AppBarView = props => {\r\n\r\n    const classes = useStyles()\r\n    const [anchorEl, setAnchorEl] = React.useState(null)\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null)\r\n\r\n    const isMenuOpen = Boolean(anchorEl)\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl)\r\n\r\n    const handleProfileMenuOpen = event => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null)\r\n    }\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null)\r\n        handleMobileMenuClose()\r\n    }\r\n\r\n    const handleMobileMenuOpen = event => {\r\n        setMobileMoreAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const menuId = 'primary-search-account-menu'\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n        </Menu>\r\n    )\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile'\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                    <Badge badgeContent={4} color=\"secondary\">\r\n                        <MailIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Messages</p>\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                    <Badge badgeContent={11} color=\"secondary\">\r\n                        <NotificationsIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Notifications</p>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleProfileMenuOpen}>\r\n                <IconButton\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"primary-search-account-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                >\r\n                    <AccountCircle />\r\n                </IconButton>\r\n                <p>Profile</p>\r\n            </MenuItem>\r\n        </Menu>\r\n    )\r\n\r\n    return (\r\n        <div className={classes.grow}>\r\n            <AppBar position=\"absolute\" className={classes.root}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        Material-UI\r\n                    </Typography>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Search…\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.grow} />\r\n                    <div className={classes.sectionDesktop}>\r\n                        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                            <Badge badgeContent={4} color=\"secondary\">\r\n                                <MailIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n                            <Badge badgeContent={17} color=\"secondary\">\r\n                                <NotificationsIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleProfileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className={classes.sectionMobile}>\r\n                        <IconButton\r\n                            aria-label=\"show more\"\r\n                            aria-controls={mobileMenuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMobileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MoreIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBarView\r\n","import React from 'react'\r\nimport AppBarView from '../../Views/Header/AppBarView'\r\n\r\nconst AppBar = props => {\r\n    return <AppBarView />\r\n}\r\n\r\nexport default AppBar\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: 0,\r\n        width: '100%',\r\n        top: '60px',\r\n        height: 'calc(100% - 60px)',\r\n        position: 'absolute',\r\n    }\r\n}))\r\n\r\nconst MapManagerView = props => {\r\n\r\n    const {\r\n        mapRef,\r\n    } = props\r\n    \r\n    const classes = useStyles()\r\n\r\n    return <Grid className={classes.root} ref={mapRef}></Grid>\r\n}\r\n\r\nexport default MapManagerView\r\n","import React, { useEffect, useRef } from 'react'\r\nimport EsriLoader from 'esri-loader'\r\nimport MapManagerView from './MapManagerView'\r\n\r\nconst MapManager = props => {\r\n\r\n    const mapRef = useRef()\r\n\r\n    useEffect(() => {\r\n        createMap()\r\n    })\r\n\r\n    const createMap = () => {\r\n        \r\n        // lazy load the required ArcGIS API for JavaScript modules and CSS\r\n        EsriLoader.loadModules([\r\n                'esri/Map',\r\n                'esri/views/MapView',\r\n                \"esri/widgets/BasemapToggle\",\r\n                \"esri/widgets/BasemapGallery\"\r\n            ], { css: true }\r\n        )\r\n        .then(([ArcGISMap, MapView, BasemapToggle, BasemapGallery]) => {\r\n\r\n            var map = new ArcGISMap({\r\n                basemap: \"streets-navigation-vector\"\r\n            })\r\n\r\n            var view = new MapView({\r\n                container: mapRef.current,\r\n                map: map,\r\n                center: [-118.80500, 34.02700], // longitude, latitude\r\n                zoom: 13\r\n            })\r\n\r\n            // var basemapToggle = new BasemapToggle({\r\n            //     view: view,\r\n            //     nextBasemap: \"satellite\"\r\n            // })\r\n            // view.ui.add(basemapToggle, \"bottom-right\")\r\n\r\n            // var basemapGallery = new BasemapGallery({\r\n            //     view: view,\r\n            //     source: {\r\n            //       portal: {\r\n            //         url: \"https://www.arcgis.com\",\r\n            //         useVectorBasemaps: true  // Load vector tile basemaps\r\n            //       }\r\n            //     }\r\n            // })\r\n            // view.ui.add(basemapGallery, \"bottom-right\")\r\n        })\r\n\r\n    }\r\n\r\n    return <MapManagerView \r\n        mapRef={mapRef}\r\n    />\r\n}\r\n\r\nexport default MapManager\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport SplitPane, { Pane } from 'react-split-pane'\r\nimport './style.css'\r\n\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: 0,\r\n    // top: 500,\r\n    bottom: 0,\r\n    width: '100%',\r\n    position: 'absolute',\r\n  }\r\n}))\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst BottomPanel = props => {\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    // <div className={classes.root}>\r\n    <SplitPane split=\"horizontal\" minSize={5} maxSize={865} defaultSize={300} primary=\"second\" className={classes.root}>\r\n      <div style={{ position: 'absolute', zIndex: -50 }}/>\r\n      <Paper style={{ height: '100%', width: '100%' }}>\r\n\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Dessert (100g serving)</TableCell>\r\n                <TableCell align=\"right\">Calories</TableCell>\r\n                <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n                <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n                <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map(row => (\r\n                <TableRow key={row.name}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.name}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{row.calories}</TableCell>\r\n                  <TableCell align=\"right\">{row.fat}</TableCell>\r\n                  <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                  <TableCell align=\"right\">{row.protein}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n      </Paper>\r\n    </SplitPane>\r\n    // </div>\r\n  )\r\n}\r\n\r\nexport default BottomPanel\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport SplitPane, { Pane } from 'react-split-pane'\r\nimport './style.css'\r\n\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: 0,\r\n    // top: 500,\r\n    bottom: 0,\r\n    width: '100%',\r\n    height: '50%',\r\n    position: 'absolute',\r\n  }\r\n}))\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst BottomPanel = props => {\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <span />\r\n      <Paper style={{ height: '100%', width: '100%' }}>\r\n        foo\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BottomPanel\r\n","import React from 'react'\r\nimport AppBar from '../../Containers/Header/AppBar'\r\nimport MapManager from '../../../Maps/MapManager'\r\nimport BottomPanel from './Result/BottomPanel'\r\nimport BottomPanel2 from './Result/BottomPanel2'\r\n\r\nconst WebLayoutView = props => {\r\n    return (<>\r\n        <AppBar />\r\n        <MapManager />\r\n        <BottomPanel />\r\n        {/* <BottomPanel2 /> */}\r\n    </>)\r\n}\r\n\r\nexport default WebLayoutView\r\n","import React from 'react'\r\nimport WebLayoutView from '../../Views/Website/WebLayoutView'\r\n\r\nconst WebLayout = props => {\r\n    return <WebLayoutView />\r\n}\r\n\r\nexport default WebLayout\r\n","import React from 'react'\r\nimport WebLayout from '../Containers/Website/WebLayout'\r\n\r\nconst LayoutView = props => {\r\n    return (<>\r\n        <WebLayout />\r\n    </>)\r\n}\r\n\r\nexport default LayoutView\r\n","import React from 'react'\r\nimport LayoutView from '../Views/LayoutView'\r\n\r\nconst Layout = props => {\r\n    return <LayoutView />\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport Layout from './Components/Containers/Layout'\n\nconst muiTheme = createMuiTheme({\n\ttypography: {\n\t\t// Use the system font.\n\t\tfontFamily: 'Prompt, sans-serif',\n\t\t//   useNextVariants: true\n\t},\n\tbreakpoints: {//For Responsive\n\t\tvalues: {\n\t\t\txs: 0,\n\t\t\tsm: 768,\n\t\t\tmd: 960,\n\t\t\tlg: 1280,\n\t\t\txl: 1920\n\t\t}\n\t}\n})\n\nconst App = () => {\n\treturn (\n\t  <ThemeProvider theme={muiTheme}>\n\t\t<Layout/>\n\t  </ThemeProvider>\n\t)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}